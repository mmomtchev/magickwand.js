/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG JSE (https://www.swig.org).
 * Version 5.0.3
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#include "swig/magickwand-js.h"

/* Class: ChannelStatistics (_Magick_ChannelStatistics) */
// jsnapi_getclass
Napi::Function _Magick_ChannelStatistics_inst::GetClass(Napi::Env env) {
  std::map<std::string, _Magick_ChannelStatistics_templ::PropertyDescriptor> members, staticMembers;
  GetMembers(env, members, staticMembers);
  
  std::vector<_Magick_ChannelStatistics_inst::PropertyDescriptor> symbolTable;
  for (auto it = members.begin(); it != members.end(); it++)
  symbolTable.push_back(it->second);
  for (auto it = staticMembers.begin(); it != staticMembers.end(); it++)
  symbolTable.push_back(it->second);
  
  return Napi::ObjectWrap<_Magick_ChannelStatistics_inst>::DefineClass(env, "ChannelStatistics", symbolTable);
}

void _Magick_ChannelStatistics_inst::GetMembers(
  Napi::Env env,
  std::map<std::string, _Magick_ChannelStatistics_templ::PropertyDescriptor> &members,
  std::map<std::string, _Magick_ChannelStatistics_templ::PropertyDescriptor> &staticMembers
  ) {
  std::map<std::string, SWIG_NAPI_ObjectWrap_templ<SWIG_NAPI_ObjectWrap_inst>::PropertyDescriptor> baseMembers, baseStaticMembers;
  SWIG_NAPI_ObjectWrap_inst::GetMembers(env, baseMembers, baseStaticMembers);
  members.insert(baseMembers.begin(), baseMembers.end());
  staticMembers.insert(staticMembers.begin(), staticMembers.end());
  
  /* register wrapper functions */
  // jsnapi_register_member_function
  members.erase("area");
  members.insert({
    "area",
      _Magick_ChannelStatistics_templ::InstanceMethod("area",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_area,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("channel");
  members.insert({
    "channel",
      _Magick_ChannelStatistics_templ::InstanceMethod("channel",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_channel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("depth");
  members.insert({
    "depth",
      _Magick_ChannelStatistics_templ::InstanceMethod("depth",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_depth,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("entropy");
  members.insert({
    "entropy",
      _Magick_ChannelStatistics_templ::InstanceMethod("entropy",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_entropy,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isValid");
  members.insert({
    "isValid",
      _Magick_ChannelStatistics_templ::InstanceMethod("isValid",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_isValid,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("kurtosis");
  members.insert({
    "kurtosis",
      _Magick_ChannelStatistics_templ::InstanceMethod("kurtosis",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_kurtosis,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("maxima");
  members.insert({
    "maxima",
      _Magick_ChannelStatistics_templ::InstanceMethod("maxima",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_maxima,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("mean");
  members.insert({
    "mean",
      _Magick_ChannelStatistics_templ::InstanceMethod("mean",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_mean,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("minima");
  members.insert({
    "minima",
      _Magick_ChannelStatistics_templ::InstanceMethod("minima",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_minima,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("skewness");
  members.insert({
    "skewness",
      _Magick_ChannelStatistics_templ::InstanceMethod("skewness",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_skewness,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("standardDeviation");
  members.insert({
    "standardDeviation",
      _Magick_ChannelStatistics_templ::InstanceMethod("standardDeviation",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_standardDeviation,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sum");
  members.insert({
    "sum",
      _Magick_ChannelStatistics_templ::InstanceMethod("sum",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_sum,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sumCubed");
  members.insert({
    "sumCubed",
      _Magick_ChannelStatistics_templ::InstanceMethod("sumCubed",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_sumCubed,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sumFourthPower");
  members.insert({
    "sumFourthPower",
      _Magick_ChannelStatistics_templ::InstanceMethod("sumFourthPower",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_sumFourthPower,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sumSquared");
  members.insert({
    "sumSquared",
      _Magick_ChannelStatistics_templ::InstanceMethod("sumSquared",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_sumSquared,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("variance");
  members.insert({
    "variance",
      _Magick_ChannelStatistics_templ::InstanceMethod("variance",
        &_Magick_ChannelStatistics_templ::_wrap_Magick_ChannelStatistics_variance,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  
  /* add static class functions and variables */
  
  
#ifndef NAPI_CPP_EXCEPTIONS
  goto fail;
fail:
  return;
#endif
}

