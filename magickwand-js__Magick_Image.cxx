/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#include "swig/magickwand-js.h"

/* Class: Image (_Magick_Image) */
// jsnapi_getclass
Napi::Function _Magick_Image_inst::GetClass(Napi::Env env) {
  std::map<std::string, _Magick_Image_templ::PropertyDescriptor> members, staticMembers;
  GetMembers(env, members, staticMembers);
  
  std::vector<_Magick_Image_inst::PropertyDescriptor> symbolTable;
  for (auto it = members.begin(); it != members.end(); it++)
  symbolTable.push_back(it->second);
  for (auto it = staticMembers.begin(); it != staticMembers.end(); it++)
  symbolTable.push_back(it->second);
  
  return Napi::ObjectWrap<_Magick_Image_inst>::DefineClass(env, "Image", symbolTable);
}

void _Magick_Image_inst::GetMembers(
  Napi::Env env,
  std::map<std::string, _Magick_Image_templ::PropertyDescriptor> &members,
  std::map<std::string, _Magick_Image_templ::PropertyDescriptor> &staticMembers
  ) {
  std::map<std::string, SWIG_NAPI_ObjectWrap_templ<SWIG_NAPI_ObjectWrap_inst>::PropertyDescriptor> baseMembers, baseStaticMembers;
  SWIG_NAPI_ObjectWrap_inst::GetMembers(env, baseMembers, baseStaticMembers);
  members.insert(baseMembers.begin(), baseMembers.end());
  staticMembers.insert(staticMembers.begin(), staticMembers.end());
  
  /* register wrapper functions */
  // jsnapi_register_member_function
  members.erase("clone");
  members.insert({
    "clone",
      _Magick_Image_templ::InstanceMethod("clone",
        &_Magick_Image_templ::_wrap_Magick_Image_clone,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("adjoin");
  members.insert({
    "adjoin",
      _Magick_Image_templ::InstanceMethod("adjoin",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_adjoin,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("matteColor");
  members.insert({
    "matteColor",
      _Magick_Image_templ::InstanceMethod("matteColor",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_matteColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("animationDelay");
  members.insert({
    "animationDelay",
      _Magick_Image_templ::InstanceMethod("animationDelay",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_animationDelay,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("animationIterations");
  members.insert({
    "animationIterations",
      _Magick_Image_templ::InstanceMethod("animationIterations",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_animationIterations,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("backgroundColor");
  members.insert({
    "backgroundColor",
      _Magick_Image_templ::InstanceMethod("backgroundColor",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_backgroundColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("backgroundTexture");
  members.insert({
    "backgroundTexture",
      _Magick_Image_templ::InstanceMethod("backgroundTexture",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_backgroundTexture,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("baseColumns");
  members.insert({
    "baseColumns",
      _Magick_Image_templ::InstanceMethod("baseColumns",
        &_Magick_Image_templ::_wrap_Magick_Image_baseColumns,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("baseFilename");
  members.insert({
    "baseFilename",
      _Magick_Image_templ::InstanceMethod("baseFilename",
        &_Magick_Image_templ::_wrap_Magick_Image_baseFilename,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("baseRows");
  members.insert({
    "baseRows",
      _Magick_Image_templ::InstanceMethod("baseRows",
        &_Magick_Image_templ::_wrap_Magick_Image_baseRows,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("blackPointCompensation");
  members.insert({
    "blackPointCompensation",
      _Magick_Image_templ::InstanceMethod("blackPointCompensation",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_blackPointCompensation,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("borderColor");
  members.insert({
    "borderColor",
      _Magick_Image_templ::InstanceMethod("borderColor",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_borderColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("boundingBox");
  members.insert({
    "boundingBox",
      _Magick_Image_templ::InstanceMethod("boundingBox",
        &_Magick_Image_templ::_wrap_Magick_Image_boundingBox,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("boxColor");
  members.insert({
    "boxColor",
      _Magick_Image_templ::InstanceMethod("boxColor",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_boxColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("channelDepth");
  members.insert({
    "channelDepth",
      _Magick_Image_templ::InstanceMethod("channelDepth",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_channelDepth,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("channels");
  members.insert({
    "channels",
      _Magick_Image_templ::InstanceMethod("channels",
        &_Magick_Image_templ::_wrap_Magick_Image_channels,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("classType");
  members.insert({
    "classType",
      _Magick_Image_templ::InstanceMethod("classType",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_classType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("colorFuzz");
  members.insert({
    "colorFuzz",
      _Magick_Image_templ::InstanceMethod("colorFuzz",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_colorFuzz,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("colorMapSize");
  members.insert({
    "colorMapSize",
      _Magick_Image_templ::InstanceMethod("colorMapSize",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_colorMapSize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("colorSpace");
  members.insert({
    "colorSpace",
      _Magick_Image_templ::InstanceMethod("colorSpace",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_colorSpace,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("colorSpaceType");
  members.insert({
    "colorSpaceType",
      _Magick_Image_templ::InstanceMethod("colorSpaceType",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_colorSpaceType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("columns");
  members.insert({
    "columns",
      _Magick_Image_templ::InstanceMethod("columns",
        &_Magick_Image_templ::_wrap_Magick_Image_columns,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("comment");
  members.insert({
    "comment",
      _Magick_Image_templ::InstanceMethod("comment",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_comment,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("compose");
  members.insert({
    "compose",
      _Magick_Image_templ::InstanceMethod("compose",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_compose,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("compressType");
  members.insert({
    "compressType",
      _Magick_Image_templ::InstanceMethod("compressType",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_compressType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("debug");
  members.insert({
    "debug",
      _Magick_Image_templ::InstanceMethod("debug",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_debug,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("density");
  members.insert({
    "density",
      _Magick_Image_templ::InstanceMethod("density",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_density,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("depth");
  members.insert({
    "depth",
      _Magick_Image_templ::InstanceMethod("depth",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_depth,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("directory");
  members.insert({
    "directory",
      _Magick_Image_templ::InstanceMethod("directory",
        &_Magick_Image_templ::_wrap_Magick_Image_directory,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("endian");
  members.insert({
    "endian",
      _Magick_Image_templ::InstanceMethod("endian",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_endian,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("exifProfile");
  members.insert({
    "exifProfile",
      _Magick_Image_templ::InstanceMethod("exifProfile",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_exifProfile,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fileName");
  members.insert({
    "fileName",
      _Magick_Image_templ::InstanceMethod("fileName",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_fileName,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fileSize");
  members.insert({
    "fileSize",
      _Magick_Image_templ::InstanceMethod("fileSize",
        &_Magick_Image_templ::_wrap_Magick_Image_fileSize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fillColor");
  members.insert({
    "fillColor",
      _Magick_Image_templ::InstanceMethod("fillColor",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_fillColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fillRule");
  members.insert({
    "fillRule",
      _Magick_Image_templ::InstanceMethod("fillRule",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_fillRule,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fillPattern");
  members.insert({
    "fillPattern",
      _Magick_Image_templ::InstanceMethod("fillPattern",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_fillPattern,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("filterType");
  members.insert({
    "filterType",
      _Magick_Image_templ::InstanceMethod("filterType",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_filterType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("font");
  members.insert({
    "font",
      _Magick_Image_templ::InstanceMethod("font",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_font,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fontFamily");
  members.insert({
    "fontFamily",
      _Magick_Image_templ::InstanceMethod("fontFamily",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_fontFamily,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fontPointsize");
  members.insert({
    "fontPointsize",
      _Magick_Image_templ::InstanceMethod("fontPointsize",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_fontPointsize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fontStyle");
  members.insert({
    "fontStyle",
      _Magick_Image_templ::InstanceMethod("fontStyle",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_fontStyle,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fontWeight");
  members.insert({
    "fontWeight",
      _Magick_Image_templ::InstanceMethod("fontWeight",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_fontWeight,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("format");
  members.insert({
    "format",
      _Magick_Image_templ::InstanceMethod("format",
        &_Magick_Image_templ::_wrap_Magick_Image_format,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("formatExpression");
  members.insert({
    "formatExpression",
      _Magick_Image_templ::InstanceMethod("formatExpression",
        &_Magick_Image_templ::_wrap_Magick_Image_formatExpression,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("geometry");
  members.insert({
    "geometry",
      _Magick_Image_templ::InstanceMethod("geometry",
        &_Magick_Image_templ::_wrap_Magick_Image_geometry,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("gifDisposeMethod");
  members.insert({
    "gifDisposeMethod",
      _Magick_Image_templ::InstanceMethod("gifDisposeMethod",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_gifDisposeMethod,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("hasChannel");
  members.insert({
    "hasChannel",
      _Magick_Image_templ::InstanceMethod("hasChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_hasChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("highlightColor");
  members.insert({
    "highlightColor",
      _Magick_Image_templ::InstanceMethod("highlightColor",
        &_Magick_Image_templ::_wrap_Magick_Image_highlightColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("iccColorProfile");
  members.insert({
    "iccColorProfile",
      _Magick_Image_templ::InstanceMethod("iccColorProfile",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_iccColorProfile,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("interlaceType");
  members.insert({
    "interlaceType",
      _Magick_Image_templ::InstanceMethod("interlaceType",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_interlaceType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("interpolate");
  members.insert({
    "interpolate",
      _Magick_Image_templ::InstanceMethod("interpolate",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_interpolate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("iptcProfile");
  members.insert({
    "iptcProfile",
      _Magick_Image_templ::InstanceMethod("iptcProfile",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_iptcProfile,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isOpaque");
  members.insert({
    "isOpaque",
      _Magick_Image_templ::InstanceMethod("isOpaque",
        &_Magick_Image_templ::_wrap_Magick_Image_isOpaque,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isValid");
  members.insert({
    "isValid",
      _Magick_Image_templ::InstanceMethod("isValid",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_isValid,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("label");
  members.insert({
    "label",
      _Magick_Image_templ::InstanceMethod("label",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_label,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("lowlightColor");
  members.insert({
    "lowlightColor",
      _Magick_Image_templ::InstanceMethod("lowlightColor",
        &_Magick_Image_templ::_wrap_Magick_Image_lowlightColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("magick");
  members.insert({
    "magick",
      _Magick_Image_templ::InstanceMethod("magick",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_magick,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("masklightColor");
  members.insert({
    "masklightColor",
      _Magick_Image_templ::InstanceMethod("masklightColor",
        &_Magick_Image_templ::_wrap_Magick_Image_masklightColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("meanErrorPerPixel");
  members.insert({
    "meanErrorPerPixel",
      _Magick_Image_templ::InstanceMethod("meanErrorPerPixel",
        &_Magick_Image_templ::_wrap_Magick_Image_meanErrorPerPixel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("modulusDepth");
  members.insert({
    "modulusDepth",
      _Magick_Image_templ::InstanceMethod("modulusDepth",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_modulusDepth,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("monochrome");
  members.insert({
    "monochrome",
      _Magick_Image_templ::InstanceMethod("monochrome",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_monochrome,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("montageGeometry");
  members.insert({
    "montageGeometry",
      _Magick_Image_templ::InstanceMethod("montageGeometry",
        &_Magick_Image_templ::_wrap_Magick_Image_montageGeometry,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("normalizedMaxError");
  members.insert({
    "normalizedMaxError",
      _Magick_Image_templ::InstanceMethod("normalizedMaxError",
        &_Magick_Image_templ::_wrap_Magick_Image_normalizedMaxError,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("normalizedMeanError");
  members.insert({
    "normalizedMeanError",
      _Magick_Image_templ::InstanceMethod("normalizedMeanError",
        &_Magick_Image_templ::_wrap_Magick_Image_normalizedMeanError,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("orientation");
  members.insert({
    "orientation",
      _Magick_Image_templ::InstanceMethod("orientation",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_orientation,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("page");
  members.insert({
    "page",
      _Magick_Image_templ::InstanceMethod("page",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_page,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("quality");
  members.insert({
    "quality",
      _Magick_Image_templ::InstanceMethod("quality",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_quality,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("quantizeColors");
  members.insert({
    "quantizeColors",
      _Magick_Image_templ::InstanceMethod("quantizeColors",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_quantizeColors,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("quantizeColorSpace");
  members.insert({
    "quantizeColorSpace",
      _Magick_Image_templ::InstanceMethod("quantizeColorSpace",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_quantizeColorSpace,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("quantizeDither");
  members.insert({
    "quantizeDither",
      _Magick_Image_templ::InstanceMethod("quantizeDither",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_quantizeDither,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("quantizeDitherMethod");
  members.insert({
    "quantizeDitherMethod",
      _Magick_Image_templ::InstanceMethod("quantizeDitherMethod",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_quantizeDitherMethod,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("quantizeTreeDepth");
  members.insert({
    "quantizeTreeDepth",
      _Magick_Image_templ::InstanceMethod("quantizeTreeDepth",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_quantizeTreeDepth,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("quiet");
  members.insert({
    "quiet",
      _Magick_Image_templ::InstanceMethod("quiet",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_quiet,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("renderingIntent");
  members.insert({
    "renderingIntent",
      _Magick_Image_templ::InstanceMethod("renderingIntent",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_renderingIntent,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("resolutionUnits");
  members.insert({
    "resolutionUnits",
      _Magick_Image_templ::InstanceMethod("resolutionUnits",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_resolutionUnits,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("rows");
  members.insert({
    "rows",
      _Magick_Image_templ::InstanceMethod("rows",
        &_Magick_Image_templ::_wrap_Magick_Image_rows,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("samplingFactor");
  members.insert({
    "samplingFactor",
      _Magick_Image_templ::InstanceMethod("samplingFactor",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_samplingFactor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("scene");
  members.insert({
    "scene",
      _Magick_Image_templ::InstanceMethod("scene",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_scene,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("size");
  members.insert({
    "size",
      _Magick_Image_templ::InstanceMethod("size",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_size,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("strokeAntiAlias");
  members.insert({
    "strokeAntiAlias",
      _Magick_Image_templ::InstanceMethod("strokeAntiAlias",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_strokeAntiAlias,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("strokeColor");
  members.insert({
    "strokeColor",
      _Magick_Image_templ::InstanceMethod("strokeColor",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_strokeColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("strokeDashArray");
  members.insert({
    "strokeDashArray",
      _Magick_Image_templ::InstanceMethod("strokeDashArray",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_strokeDashArray,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("strokeDashOffset");
  members.insert({
    "strokeDashOffset",
      _Magick_Image_templ::InstanceMethod("strokeDashOffset",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_strokeDashOffset,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("strokeLineCap");
  members.insert({
    "strokeLineCap",
      _Magick_Image_templ::InstanceMethod("strokeLineCap",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_strokeLineCap,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("strokeLineJoin");
  members.insert({
    "strokeLineJoin",
      _Magick_Image_templ::InstanceMethod("strokeLineJoin",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_strokeLineJoin,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("strokeMiterLimit");
  members.insert({
    "strokeMiterLimit",
      _Magick_Image_templ::InstanceMethod("strokeMiterLimit",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_strokeMiterLimit,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("strokePattern");
  members.insert({
    "strokePattern",
      _Magick_Image_templ::InstanceMethod("strokePattern",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_strokePattern,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("strokeWidth");
  members.insert({
    "strokeWidth",
      _Magick_Image_templ::InstanceMethod("strokeWidth",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_strokeWidth,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("subImage");
  members.insert({
    "subImage",
      _Magick_Image_templ::InstanceMethod("subImage",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_subImage,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("subRange");
  members.insert({
    "subRange",
      _Magick_Image_templ::InstanceMethod("subRange",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_subRange,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("textAntiAlias");
  members.insert({
    "textAntiAlias",
      _Magick_Image_templ::InstanceMethod("textAntiAlias",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_textAntiAlias,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("textDirection");
  members.insert({
    "textDirection",
      _Magick_Image_templ::InstanceMethod("textDirection",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_textDirection,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("textEncoding");
  members.insert({
    "textEncoding",
      _Magick_Image_templ::InstanceMethod("textEncoding",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_textEncoding,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("textGravity");
  members.insert({
    "textGravity",
      _Magick_Image_templ::InstanceMethod("textGravity",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_textGravity,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("textInterlineSpacing");
  members.insert({
    "textInterlineSpacing",
      _Magick_Image_templ::InstanceMethod("textInterlineSpacing",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_textInterlineSpacing,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("textInterwordSpacing");
  members.insert({
    "textInterwordSpacing",
      _Magick_Image_templ::InstanceMethod("textInterwordSpacing",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_textInterwordSpacing,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("textKerning");
  members.insert({
    "textKerning",
      _Magick_Image_templ::InstanceMethod("textKerning",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_textKerning,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("textUnderColor");
  members.insert({
    "textUnderColor",
      _Magick_Image_templ::InstanceMethod("textUnderColor",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_textUnderColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("totalColors");
  members.insert({
    "totalColors",
      _Magick_Image_templ::InstanceMethod("totalColors",
        &_Magick_Image_templ::_wrap_Magick_Image_totalColors,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("transformRotation");
  members.insert({
    "transformRotation",
      _Magick_Image_templ::InstanceMethod("transformRotation",
        &_Magick_Image_templ::_wrap_Magick_Image_transformRotation,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("transformSkewX");
  members.insert({
    "transformSkewX",
      _Magick_Image_templ::InstanceMethod("transformSkewX",
        &_Magick_Image_templ::_wrap_Magick_Image_transformSkewX,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("transformSkewY");
  members.insert({
    "transformSkewY",
      _Magick_Image_templ::InstanceMethod("transformSkewY",
        &_Magick_Image_templ::_wrap_Magick_Image_transformSkewY,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("type");
  members.insert({
    "type",
      _Magick_Image_templ::InstanceMethod("type",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_type,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("verbose");
  members.insert({
    "verbose",
      _Magick_Image_templ::InstanceMethod("verbose",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_verbose,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("virtualPixelMethod");
  members.insert({
    "virtualPixelMethod",
      _Magick_Image_templ::InstanceMethod("virtualPixelMethod",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_virtualPixelMethod,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("x11Display");
  members.insert({
    "x11Display",
      _Magick_Image_templ::InstanceMethod("x11Display",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_x11Display,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("xResolution");
  members.insert({
    "xResolution",
      _Magick_Image_templ::InstanceMethod("xResolution",
        &_Magick_Image_templ::_wrap_Magick_Image_xResolution,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("yResolution");
  members.insert({
    "yResolution",
      _Magick_Image_templ::InstanceMethod("yResolution",
        &_Magick_Image_templ::_wrap_Magick_Image_yResolution,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("adaptiveBlur");
  members.insert({
    "adaptiveBlur",
      _Magick_Image_templ::InstanceMethod("adaptiveBlur",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_adaptiveBlur,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("adaptiveResize");
  members.insert({
    "adaptiveResize",
      _Magick_Image_templ::InstanceMethod("adaptiveResize",
        &_Magick_Image_templ::_wrap_Magick_Image_adaptiveResize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("adaptiveSharpen");
  members.insert({
    "adaptiveSharpen",
      _Magick_Image_templ::InstanceMethod("adaptiveSharpen",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_adaptiveSharpen,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("adaptiveSharpenChannel");
  members.insert({
    "adaptiveSharpenChannel",
      _Magick_Image_templ::InstanceMethod("adaptiveSharpenChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_adaptiveSharpenChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("adaptiveThreshold");
  members.insert({
    "adaptiveThreshold",
      _Magick_Image_templ::InstanceMethod("adaptiveThreshold",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_adaptiveThreshold,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("addNoise");
  members.insert({
    "addNoise",
      _Magick_Image_templ::InstanceMethod("addNoise",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_addNoise,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("addNoiseChannel");
  members.insert({
    "addNoiseChannel",
      _Magick_Image_templ::InstanceMethod("addNoiseChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_addNoiseChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("affineTransform");
  members.insert({
    "affineTransform",
      _Magick_Image_templ::InstanceMethod("affineTransform",
        &_Magick_Image_templ::_wrap_Magick_Image_affineTransform,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("alpha");
  members.insert({
    "alpha",
      _Magick_Image_templ::InstanceMethod("alpha",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_alpha,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("alphaChannel");
  members.insert({
    "alphaChannel",
      _Magick_Image_templ::InstanceMethod("alphaChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_alphaChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("annotate");
  members.insert({
    "annotate",
      _Magick_Image_templ::InstanceMethod("annotate",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_annotate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("artifact");
  members.insert({
    "artifact",
      _Magick_Image_templ::InstanceMethod("artifact",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_artifact,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("attribute");
  members.insert({
    "attribute",
      _Magick_Image_templ::InstanceMethod("attribute",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_attribute,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("autoGamma");
  members.insert({
    "autoGamma",
      _Magick_Image_templ::InstanceMethod("autoGamma",
        &_Magick_Image_templ::_wrap_Magick_Image_autoGamma,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("autoGammaChannel");
  members.insert({
    "autoGammaChannel",
      _Magick_Image_templ::InstanceMethod("autoGammaChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_autoGammaChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("autoLevel");
  members.insert({
    "autoLevel",
      _Magick_Image_templ::InstanceMethod("autoLevel",
        &_Magick_Image_templ::_wrap_Magick_Image_autoLevel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("autoLevelChannel");
  members.insert({
    "autoLevelChannel",
      _Magick_Image_templ::InstanceMethod("autoLevelChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_autoLevelChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("autoOrient");
  members.insert({
    "autoOrient",
      _Magick_Image_templ::InstanceMethod("autoOrient",
        &_Magick_Image_templ::_wrap_Magick_Image_autoOrient,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("autoThreshold");
  members.insert({
    "autoThreshold",
      _Magick_Image_templ::InstanceMethod("autoThreshold",
        &_Magick_Image_templ::_wrap_Magick_Image_autoThreshold,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("blackThreshold");
  members.insert({
    "blackThreshold",
      _Magick_Image_templ::InstanceMethod("blackThreshold",
        &_Magick_Image_templ::_wrap_Magick_Image_blackThreshold,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("blackThresholdChannel");
  members.insert({
    "blackThresholdChannel",
      _Magick_Image_templ::InstanceMethod("blackThresholdChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_blackThresholdChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("blueShift");
  members.insert({
    "blueShift",
      _Magick_Image_templ::InstanceMethod("blueShift",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_blueShift,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("blur");
  members.insert({
    "blur",
      _Magick_Image_templ::InstanceMethod("blur",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_blur,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("blurChannel");
  members.insert({
    "blurChannel",
      _Magick_Image_templ::InstanceMethod("blurChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_blurChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("border");
  members.insert({
    "border",
      _Magick_Image_templ::InstanceMethod("border",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_border,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("brightnessContrast");
  members.insert({
    "brightnessContrast",
      _Magick_Image_templ::InstanceMethod("brightnessContrast",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_brightnessContrast,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("brightnessContrastChannel");
  members.insert({
    "brightnessContrastChannel",
      _Magick_Image_templ::InstanceMethod("brightnessContrastChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_brightnessContrastChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("cannyEdge");
  members.insert({
    "cannyEdge",
      _Magick_Image_templ::InstanceMethod("cannyEdge",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_cannyEdge,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("cdl");
  members.insert({
    "cdl",
      _Magick_Image_templ::InstanceMethod("cdl",
        &_Magick_Image_templ::_wrap_Magick_Image_cdl,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("channel");
  members.insert({
    "channel",
      _Magick_Image_templ::InstanceMethod("channel",
        &_Magick_Image_templ::_wrap_Magick_Image_channel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("charcoal");
  members.insert({
    "charcoal",
      _Magick_Image_templ::InstanceMethod("charcoal",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_charcoal,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("charcoalChannel");
  members.insert({
    "charcoalChannel",
      _Magick_Image_templ::InstanceMethod("charcoalChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_charcoalChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("chop");
  members.insert({
    "chop",
      _Magick_Image_templ::InstanceMethod("chop",
        &_Magick_Image_templ::_wrap_Magick_Image_chop,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("chromaBluePrimary");
  members.insert({
    "chromaBluePrimary",
      _Magick_Image_templ::InstanceMethod("chromaBluePrimary",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_chromaBluePrimary,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("chromaGreenPrimary");
  members.insert({
    "chromaGreenPrimary",
      _Magick_Image_templ::InstanceMethod("chromaGreenPrimary",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_chromaGreenPrimary,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("chromaRedPrimary");
  members.insert({
    "chromaRedPrimary",
      _Magick_Image_templ::InstanceMethod("chromaRedPrimary",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_chromaRedPrimary,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("chromaWhitePoint");
  members.insert({
    "chromaWhitePoint",
      _Magick_Image_templ::InstanceMethod("chromaWhitePoint",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_chromaWhitePoint,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("clamp");
  members.insert({
    "clamp",
      _Magick_Image_templ::InstanceMethod("clamp",
        &_Magick_Image_templ::_wrap_Magick_Image_clamp,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("clampChannel");
  members.insert({
    "clampChannel",
      _Magick_Image_templ::InstanceMethod("clampChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_clampChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("clip");
  members.insert({
    "clip",
      _Magick_Image_templ::InstanceMethod("clip",
        &_Magick_Image_templ::_wrap_Magick_Image_clip,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("clipPath");
  members.insert({
    "clipPath",
      _Magick_Image_templ::InstanceMethod("clipPath",
        &_Magick_Image_templ::_wrap_Magick_Image_clipPath,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("clut");
  members.insert({
    "clut",
      _Magick_Image_templ::InstanceMethod("clut",
        &_Magick_Image_templ::_wrap_Magick_Image_clut,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("clutChannel");
  members.insert({
    "clutChannel",
      _Magick_Image_templ::InstanceMethod("clutChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_clutChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("colorize");
  members.insert({
    "colorize",
      _Magick_Image_templ::InstanceMethod("colorize",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_colorize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("colorMap");
  members.insert({
    "colorMap",
      _Magick_Image_templ::InstanceMethod("colorMap",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_colorMap,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("colorMatrix");
  members.insert({
    "colorMatrix",
      _Magick_Image_templ::InstanceMethod("colorMatrix",
        &_Magick_Image_templ::_wrap_Magick_Image_colorMatrix,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("compare");
  members.insert({
    "compare",
      _Magick_Image_templ::InstanceMethod("compare",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_compare,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("compareChannel");
  members.insert({
    "compareChannel",
      _Magick_Image_templ::InstanceMethod("compareChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_compareChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("composite");
  members.insert({
    "composite",
      _Magick_Image_templ::InstanceMethod("composite",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_composite,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("connectedComponents");
  members.insert({
    "connectedComponents",
      _Magick_Image_templ::InstanceMethod("connectedComponents",
        &_Magick_Image_templ::_wrap_Magick_Image_connectedComponents,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("contrast");
  members.insert({
    "contrast",
      _Magick_Image_templ::InstanceMethod("contrast",
        &_Magick_Image_templ::_wrap_Magick_Image_contrast,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("contrastStretch");
  members.insert({
    "contrastStretch",
      _Magick_Image_templ::InstanceMethod("contrastStretch",
        &_Magick_Image_templ::_wrap_Magick_Image_contrastStretch,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("contrastStretchChannel");
  members.insert({
    "contrastStretchChannel",
      _Magick_Image_templ::InstanceMethod("contrastStretchChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_contrastStretchChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("convolve");
  members.insert({
    "convolve",
      _Magick_Image_templ::InstanceMethod("convolve",
        &_Magick_Image_templ::_wrap_Magick_Image_convolve,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("copyPixels");
  members.insert({
    "copyPixels",
      _Magick_Image_templ::InstanceMethod("copyPixels",
        &_Magick_Image_templ::_wrap_Magick_Image_copyPixels,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("crop");
  members.insert({
    "crop",
      _Magick_Image_templ::InstanceMethod("crop",
        &_Magick_Image_templ::_wrap_Magick_Image_crop,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("cycleColormap");
  members.insert({
    "cycleColormap",
      _Magick_Image_templ::InstanceMethod("cycleColormap",
        &_Magick_Image_templ::_wrap_Magick_Image_cycleColormap,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("decipher");
  members.insert({
    "decipher",
      _Magick_Image_templ::InstanceMethod("decipher",
        &_Magick_Image_templ::_wrap_Magick_Image_decipher,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("defineSet");
  members.insert({
    "defineSet",
      _Magick_Image_templ::InstanceMethod("defineSet",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_defineSet,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("defineValue");
  members.insert({
    "defineValue",
      _Magick_Image_templ::InstanceMethod("defineValue",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_defineValue,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("deskew");
  members.insert({
    "deskew",
      _Magick_Image_templ::InstanceMethod("deskew",
        &_Magick_Image_templ::_wrap_Magick_Image_deskew,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("despeckle");
  members.insert({
    "despeckle",
      _Magick_Image_templ::InstanceMethod("despeckle",
        &_Magick_Image_templ::_wrap_Magick_Image_despeckle,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("display");
  members.insert({
    "display",
      _Magick_Image_templ::InstanceMethod("display",
        &_Magick_Image_templ::_wrap_Magick_Image_display,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("distort");
  members.insert({
    "distort",
      _Magick_Image_templ::InstanceMethod("distort",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_distort,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("draw");
  members.insert({
    "draw",
      _Magick_Image_templ::InstanceMethod("draw",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_draw,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("edge");
  members.insert({
    "edge",
      _Magick_Image_templ::InstanceMethod("edge",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_edge,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("emboss");
  members.insert({
    "emboss",
      _Magick_Image_templ::InstanceMethod("emboss",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_emboss,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("encipher");
  members.insert({
    "encipher",
      _Magick_Image_templ::InstanceMethod("encipher",
        &_Magick_Image_templ::_wrap_Magick_Image_encipher,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("enhance");
  members.insert({
    "enhance",
      _Magick_Image_templ::InstanceMethod("enhance",
        &_Magick_Image_templ::_wrap_Magick_Image_enhance,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("equalize");
  members.insert({
    "equalize",
      _Magick_Image_templ::InstanceMethod("equalize",
        &_Magick_Image_templ::_wrap_Magick_Image_equalize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("erase");
  members.insert({
    "erase",
      _Magick_Image_templ::InstanceMethod("erase",
        &_Magick_Image_templ::_wrap_Magick_Image_erase,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("evaluate");
  members.insert({
    "evaluate",
      _Magick_Image_templ::InstanceMethod("evaluate",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_evaluate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("extent");
  members.insert({
    "extent",
      _Magick_Image_templ::InstanceMethod("extent",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_extent,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("flip");
  members.insert({
    "flip",
      _Magick_Image_templ::InstanceMethod("flip",
        &_Magick_Image_templ::_wrap_Magick_Image_flip,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("floodFillAlpha");
  members.insert({
    "floodFillAlpha",
      _Magick_Image_templ::InstanceMethod("floodFillAlpha",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_floodFillAlpha,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("floodFillColor");
  members.insert({
    "floodFillColor",
      _Magick_Image_templ::InstanceMethod("floodFillColor",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_floodFillColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("floodFillTexture");
  members.insert({
    "floodFillTexture",
      _Magick_Image_templ::InstanceMethod("floodFillTexture",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_floodFillTexture,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("flop");
  members.insert({
    "flop",
      _Magick_Image_templ::InstanceMethod("flop",
        &_Magick_Image_templ::_wrap_Magick_Image_flop,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fontTypeMetrics");
  members.insert({
    "fontTypeMetrics",
      _Magick_Image_templ::InstanceMethod("fontTypeMetrics",
        &_Magick_Image_templ::_wrap_Magick_Image_fontTypeMetrics,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fontTypeMetricsMultiline");
  members.insert({
    "fontTypeMetricsMultiline",
      _Magick_Image_templ::InstanceMethod("fontTypeMetricsMultiline",
        &_Magick_Image_templ::_wrap_Magick_Image_fontTypeMetricsMultiline,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("frame");
  members.insert({
    "frame",
      _Magick_Image_templ::InstanceMethod("frame",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_frame,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("fx");
  members.insert({
    "fx",
      _Magick_Image_templ::InstanceMethod("fx",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_fx,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("gamma");
  members.insert({
    "gamma",
      _Magick_Image_templ::InstanceMethod("gamma",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_gamma,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("gaussianBlur");
  members.insert({
    "gaussianBlur",
      _Magick_Image_templ::InstanceMethod("gaussianBlur",
        &_Magick_Image_templ::_wrap_Magick_Image_gaussianBlur,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("gaussianBlurChannel");
  members.insert({
    "gaussianBlurChannel",
      _Magick_Image_templ::InstanceMethod("gaussianBlurChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_gaussianBlurChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getConstPixels");
  members.insert({
    "getConstPixels",
      _Magick_Image_templ::InstanceMethod("getConstPixels",
        &_Magick_Image_templ::_wrap_Magick_Image_getConstPixels,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getConstMetacontent");
  members.insert({
    "getConstMetacontent",
      _Magick_Image_templ::InstanceMethod("getConstMetacontent",
        &_Magick_Image_templ::_wrap_Magick_Image_getConstMetacontent,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getMetacontent");
  members.insert({
    "getMetacontent",
      _Magick_Image_templ::InstanceMethod("getMetacontent",
        &_Magick_Image_templ::_wrap_Magick_Image_getMetacontent,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getPixels");
  members.insert({
    "getPixels",
      _Magick_Image_templ::InstanceMethod("getPixels",
        &_Magick_Image_templ::_wrap_Magick_Image_getPixels,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("grayscale");
  members.insert({
    "grayscale",
      _Magick_Image_templ::InstanceMethod("grayscale",
        &_Magick_Image_templ::_wrap_Magick_Image_grayscale,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("haldClut");
  members.insert({
    "haldClut",
      _Magick_Image_templ::InstanceMethod("haldClut",
        &_Magick_Image_templ::_wrap_Magick_Image_haldClut,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("houghLine");
  members.insert({
    "houghLine",
      _Magick_Image_templ::InstanceMethod("houghLine",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_houghLine,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("identifyType");
  members.insert({
    "identifyType",
      _Magick_Image_templ::InstanceMethod("identifyType",
        &_Magick_Image_templ::_wrap_Magick_Image_identifyType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("implode");
  members.insert({
    "implode",
      _Magick_Image_templ::InstanceMethod("implode",
        &_Magick_Image_templ::_wrap_Magick_Image_implode,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("inverseFourierTransform");
  members.insert({
    "inverseFourierTransform",
      _Magick_Image_templ::InstanceMethod("inverseFourierTransform",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_inverseFourierTransform,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("kuwahara");
  members.insert({
    "kuwahara",
      _Magick_Image_templ::InstanceMethod("kuwahara",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_kuwahara,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("kuwaharaChannel");
  members.insert({
    "kuwaharaChannel",
      _Magick_Image_templ::InstanceMethod("kuwaharaChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_kuwaharaChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("level");
  members.insert({
    "level",
      _Magick_Image_templ::InstanceMethod("level",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_level,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("levelChannel");
  members.insert({
    "levelChannel",
      _Magick_Image_templ::InstanceMethod("levelChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_levelChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("levelColors");
  members.insert({
    "levelColors",
      _Magick_Image_templ::InstanceMethod("levelColors",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_levelColors,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("levelColorsChannel");
  members.insert({
    "levelColorsChannel",
      _Magick_Image_templ::InstanceMethod("levelColorsChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_levelColorsChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("levelize");
  members.insert({
    "levelize",
      _Magick_Image_templ::InstanceMethod("levelize",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_levelize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("levelizeChannel");
  members.insert({
    "levelizeChannel",
      _Magick_Image_templ::InstanceMethod("levelizeChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_levelizeChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("linearStretch");
  members.insert({
    "linearStretch",
      _Magick_Image_templ::InstanceMethod("linearStretch",
        &_Magick_Image_templ::_wrap_Magick_Image_linearStretch,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("liquidRescale");
  members.insert({
    "liquidRescale",
      _Magick_Image_templ::InstanceMethod("liquidRescale",
        &_Magick_Image_templ::_wrap_Magick_Image_liquidRescale,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("localContrast");
  members.insert({
    "localContrast",
      _Magick_Image_templ::InstanceMethod("localContrast",
        &_Magick_Image_templ::_wrap_Magick_Image_localContrast,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("localContrastChannel");
  members.insert({
    "localContrastChannel",
      _Magick_Image_templ::InstanceMethod("localContrastChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_localContrastChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("magnify");
  members.insert({
    "magnify",
      _Magick_Image_templ::InstanceMethod("magnify",
        &_Magick_Image_templ::_wrap_Magick_Image_magnify,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("map");
  members.insert({
    "map",
      _Magick_Image_templ::InstanceMethod("map",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_map,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("meanShift");
  members.insert({
    "meanShift",
      _Magick_Image_templ::InstanceMethod("meanShift",
        &_Magick_Image_templ::_wrap_Magick_Image_meanShift,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("medianFilter");
  members.insert({
    "medianFilter",
      _Magick_Image_templ::InstanceMethod("medianFilter",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_medianFilter,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("minify");
  members.insert({
    "minify",
      _Magick_Image_templ::InstanceMethod("minify",
        &_Magick_Image_templ::_wrap_Magick_Image_minify,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("modulate");
  members.insert({
    "modulate",
      _Magick_Image_templ::InstanceMethod("modulate",
        &_Magick_Image_templ::_wrap_Magick_Image_modulate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("moments");
  members.insert({
    "moments",
      _Magick_Image_templ::InstanceMethod("moments",
        &_Magick_Image_templ::_wrap_Magick_Image_moments,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("morphology");
  members.insert({
    "morphology",
      _Magick_Image_templ::InstanceMethod("morphology",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_morphology,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("morphologyChannel");
  members.insert({
    "morphologyChannel",
      _Magick_Image_templ::InstanceMethod("morphologyChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_morphologyChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("motionBlur");
  members.insert({
    "motionBlur",
      _Magick_Image_templ::InstanceMethod("motionBlur",
        &_Magick_Image_templ::_wrap_Magick_Image_motionBlur,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("negate");
  members.insert({
    "negate",
      _Magick_Image_templ::InstanceMethod("negate",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_negate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("negateChannel");
  members.insert({
    "negateChannel",
      _Magick_Image_templ::InstanceMethod("negateChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_negateChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("normalize");
  members.insert({
    "normalize",
      _Magick_Image_templ::InstanceMethod("normalize",
        &_Magick_Image_templ::_wrap_Magick_Image_normalize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("oilPaint");
  members.insert({
    "oilPaint",
      _Magick_Image_templ::InstanceMethod("oilPaint",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_oilPaint,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("opaque");
  members.insert({
    "opaque",
      _Magick_Image_templ::InstanceMethod("opaque",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_opaque,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("orderedDither");
  members.insert({
    "orderedDither",
      _Magick_Image_templ::InstanceMethod("orderedDither",
        &_Magick_Image_templ::_wrap_Magick_Image_orderedDither,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("orderedDitherChannel");
  members.insert({
    "orderedDitherChannel",
      _Magick_Image_templ::InstanceMethod("orderedDitherChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_orderedDitherChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("perceptible");
  members.insert({
    "perceptible",
      _Magick_Image_templ::InstanceMethod("perceptible",
        &_Magick_Image_templ::_wrap_Magick_Image_perceptible,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("perceptibleChannel");
  members.insert({
    "perceptibleChannel",
      _Magick_Image_templ::InstanceMethod("perceptibleChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_perceptibleChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("perceptualHash");
  members.insert({
    "perceptualHash",
      _Magick_Image_templ::InstanceMethod("perceptualHash",
        &_Magick_Image_templ::_wrap_Magick_Image_perceptualHash,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("ping");
  members.insert({
    "ping",
      _Magick_Image_templ::InstanceMethod("ping",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_ping,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("pixelColor");
  members.insert({
    "pixelColor",
      _Magick_Image_templ::InstanceMethod("pixelColor",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_pixelColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("polaroid");
  members.insert({
    "polaroid",
      _Magick_Image_templ::InstanceMethod("polaroid",
        &_Magick_Image_templ::_wrap_Magick_Image_polaroid,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("posterize");
  members.insert({
    "posterize",
      _Magick_Image_templ::InstanceMethod("posterize",
        &_Magick_Image_templ::_wrap_Magick_Image_posterize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("posterizeChannel");
  members.insert({
    "posterizeChannel",
      _Magick_Image_templ::InstanceMethod("posterizeChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_posterizeChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("process");
  members.insert({
    "process",
      _Magick_Image_templ::InstanceMethod("process",
        &_Magick_Image_templ::_wrap_Magick_Image_process,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("profile");
  members.insert({
    "profile",
      _Magick_Image_templ::InstanceMethod("profile",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_profile,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("quantize");
  members.insert({
    "quantize",
      _Magick_Image_templ::InstanceMethod("quantize",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_quantize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("raise");
  members.insert({
    "raise",
      _Magick_Image_templ::InstanceMethod("raise",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_raise,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("randomThreshold");
  members.insert({
    "randomThreshold",
      _Magick_Image_templ::InstanceMethod("randomThreshold",
        &_Magick_Image_templ::_wrap_Magick_Image_randomThreshold,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("randomThresholdChannel");
  members.insert({
    "randomThresholdChannel",
      _Magick_Image_templ::InstanceMethod("randomThresholdChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_randomThresholdChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("read");
  members.insert({
    "read",
      _Magick_Image_templ::InstanceMethod("read",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_read,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("readMask");
  members.insert({
    "readMask",
      _Magick_Image_templ::InstanceMethod("readMask",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_readMask,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("readPixels");
  members.insert({
    "readPixels",
      _Magick_Image_templ::InstanceMethod("readPixels",
        &_Magick_Image_templ::_wrap_Magick_Image_readPixels,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("reduceNoise");
  members.insert({
    "reduceNoise",
      _Magick_Image_templ::InstanceMethod("reduceNoise",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_reduceNoise,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("repage");
  members.insert({
    "repage",
      _Magick_Image_templ::InstanceMethod("repage",
        &_Magick_Image_templ::_wrap_Magick_Image_repage,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("resample");
  members.insert({
    "resample",
      _Magick_Image_templ::InstanceMethod("resample",
        &_Magick_Image_templ::_wrap_Magick_Image_resample,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("resize");
  members.insert({
    "resize",
      _Magick_Image_templ::InstanceMethod("resize",
        &_Magick_Image_templ::_wrap_Magick_Image_resize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("roll");
  members.insert({
    "roll",
      _Magick_Image_templ::InstanceMethod("roll",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_roll,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("rotate");
  members.insert({
    "rotate",
      _Magick_Image_templ::InstanceMethod("rotate",
        &_Magick_Image_templ::_wrap_Magick_Image_rotate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("rotationalBlur");
  members.insert({
    "rotationalBlur",
      _Magick_Image_templ::InstanceMethod("rotationalBlur",
        &_Magick_Image_templ::_wrap_Magick_Image_rotationalBlur,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("rotationalBlurChannel");
  members.insert({
    "rotationalBlurChannel",
      _Magick_Image_templ::InstanceMethod("rotationalBlurChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_rotationalBlurChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sample");
  members.insert({
    "sample",
      _Magick_Image_templ::InstanceMethod("sample",
        &_Magick_Image_templ::_wrap_Magick_Image_sample,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("scale");
  members.insert({
    "scale",
      _Magick_Image_templ::InstanceMethod("scale",
        &_Magick_Image_templ::_wrap_Magick_Image_scale,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("segment");
  members.insert({
    "segment",
      _Magick_Image_templ::InstanceMethod("segment",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_segment,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("selectiveBlur");
  members.insert({
    "selectiveBlur",
      _Magick_Image_templ::InstanceMethod("selectiveBlur",
        &_Magick_Image_templ::_wrap_Magick_Image_selectiveBlur,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("selectiveBlurChannel");
  members.insert({
    "selectiveBlurChannel",
      _Magick_Image_templ::InstanceMethod("selectiveBlurChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_selectiveBlurChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("separate");
  members.insert({
    "separate",
      _Magick_Image_templ::InstanceMethod("separate",
        &_Magick_Image_templ::_wrap_Magick_Image_separate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sepiaTone");
  members.insert({
    "sepiaTone",
      _Magick_Image_templ::InstanceMethod("sepiaTone",
        &_Magick_Image_templ::_wrap_Magick_Image_sepiaTone,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("setColorMetric");
  members.insert({
    "setColorMetric",
      _Magick_Image_templ::InstanceMethod("setColorMetric",
        &_Magick_Image_templ::_wrap_Magick_Image_setColorMetric,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("setPixels");
  members.insert({
    "setPixels",
      _Magick_Image_templ::InstanceMethod("setPixels",
        &_Magick_Image_templ::_wrap_Magick_Image_setPixels,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("shade");
  members.insert({
    "shade",
      _Magick_Image_templ::InstanceMethod("shade",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_shade,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("shadow");
  members.insert({
    "shadow",
      _Magick_Image_templ::InstanceMethod("shadow",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_shadow,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sharpen");
  members.insert({
    "sharpen",
      _Magick_Image_templ::InstanceMethod("sharpen",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_sharpen,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sharpenChannel");
  members.insert({
    "sharpenChannel",
      _Magick_Image_templ::InstanceMethod("sharpenChannel",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_sharpenChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("shave");
  members.insert({
    "shave",
      _Magick_Image_templ::InstanceMethod("shave",
        &_Magick_Image_templ::_wrap_Magick_Image_shave,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("shear");
  members.insert({
    "shear",
      _Magick_Image_templ::InstanceMethod("shear",
        &_Magick_Image_templ::_wrap_Magick_Image_shear,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sigmoidalContrast");
  members.insert({
    "sigmoidalContrast",
      _Magick_Image_templ::InstanceMethod("sigmoidalContrast",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_sigmoidalContrast,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("signature");
  members.insert({
    "signature",
      _Magick_Image_templ::InstanceMethod("signature",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_signature,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sketch");
  members.insert({
    "sketch",
      _Magick_Image_templ::InstanceMethod("sketch",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_sketch,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("solarize");
  members.insert({
    "solarize",
      _Magick_Image_templ::InstanceMethod("solarize",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_solarize,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("sparseColor");
  members.insert({
    "sparseColor",
      _Magick_Image_templ::InstanceMethod("sparseColor",
        &_Magick_Image_templ::_wrap_Magick_Image_sparseColor,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("splice");
  members.insert({
    "splice",
      _Magick_Image_templ::InstanceMethod("splice",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_splice,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("spread");
  members.insert({
    "spread",
      _Magick_Image_templ::InstanceMethod("spread",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_spread,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("statistics");
  members.insert({
    "statistics",
      _Magick_Image_templ::InstanceMethod("statistics",
        &_Magick_Image_templ::_wrap_Magick_Image_statistics,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("stegano");
  members.insert({
    "stegano",
      _Magick_Image_templ::InstanceMethod("stegano",
        &_Magick_Image_templ::_wrap_Magick_Image_stegano,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("stereo");
  members.insert({
    "stereo",
      _Magick_Image_templ::InstanceMethod("stereo",
        &_Magick_Image_templ::_wrap_Magick_Image_stereo,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("strip");
  members.insert({
    "strip",
      _Magick_Image_templ::InstanceMethod("strip",
        &_Magick_Image_templ::_wrap_Magick_Image_strip,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("subImageSearch");
  members.insert({
    "subImageSearch",
      _Magick_Image_templ::InstanceMethod("subImageSearch",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_subImageSearch,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("swirl");
  members.insert({
    "swirl",
      _Magick_Image_templ::InstanceMethod("swirl",
        &_Magick_Image_templ::_wrap_Magick_Image_swirl,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("syncPixels");
  members.insert({
    "syncPixels",
      _Magick_Image_templ::InstanceMethod("syncPixels",
        &_Magick_Image_templ::_wrap_Magick_Image_syncPixels,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("texture");
  members.insert({
    "texture",
      _Magick_Image_templ::InstanceMethod("texture",
        &_Magick_Image_templ::_wrap_Magick_Image_texture,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("threshold");
  members.insert({
    "threshold",
      _Magick_Image_templ::InstanceMethod("threshold",
        &_Magick_Image_templ::_wrap_Magick_Image_threshold,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("thumbnail");
  members.insert({
    "thumbnail",
      _Magick_Image_templ::InstanceMethod("thumbnail",
        &_Magick_Image_templ::_wrap_Magick_Image_thumbnail,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("tint");
  members.insert({
    "tint",
      _Magick_Image_templ::InstanceMethod("tint",
        &_Magick_Image_templ::_wrap_Magick_Image_tint,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("transformOrigin");
  members.insert({
    "transformOrigin",
      _Magick_Image_templ::InstanceMethod("transformOrigin",
        &_Magick_Image_templ::_wrap_Magick_Image_transformOrigin,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("transformReset");
  members.insert({
    "transformReset",
      _Magick_Image_templ::InstanceMethod("transformReset",
        &_Magick_Image_templ::_wrap_Magick_Image_transformReset,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("transformScale");
  members.insert({
    "transformScale",
      _Magick_Image_templ::InstanceMethod("transformScale",
        &_Magick_Image_templ::_wrap_Magick_Image_transformScale,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("transparent");
  members.insert({
    "transparent",
      _Magick_Image_templ::InstanceMethod("transparent",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_transparent,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("transparentChroma");
  members.insert({
    "transparentChroma",
      _Magick_Image_templ::InstanceMethod("transparentChroma",
        &_Magick_Image_templ::_wrap_Magick_Image_transparentChroma,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("transpose");
  members.insert({
    "transpose",
      _Magick_Image_templ::InstanceMethod("transpose",
        &_Magick_Image_templ::_wrap_Magick_Image_transpose,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("transverse");
  members.insert({
    "transverse",
      _Magick_Image_templ::InstanceMethod("transverse",
        &_Magick_Image_templ::_wrap_Magick_Image_transverse,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("trim");
  members.insert({
    "trim",
      _Magick_Image_templ::InstanceMethod("trim",
        &_Magick_Image_templ::_wrap_Magick_Image_trim,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("uniqueColors");
  members.insert({
    "uniqueColors",
      _Magick_Image_templ::InstanceMethod("uniqueColors",
        &_Magick_Image_templ::_wrap_Magick_Image_uniqueColors,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("unsharpmask");
  members.insert({
    "unsharpmask",
      _Magick_Image_templ::InstanceMethod("unsharpmask",
        &_Magick_Image_templ::_wrap_Magick_Image_unsharpmask,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("unsharpmaskChannel");
  members.insert({
    "unsharpmaskChannel",
      _Magick_Image_templ::InstanceMethod("unsharpmaskChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_unsharpmaskChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("vignette");
  members.insert({
    "vignette",
      _Magick_Image_templ::InstanceMethod("vignette",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_vignette,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("wave");
  members.insert({
    "wave",
      _Magick_Image_templ::InstanceMethod("wave",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_wave,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("waveletDenoise");
  members.insert({
    "waveletDenoise",
      _Magick_Image_templ::InstanceMethod("waveletDenoise",
        &_Magick_Image_templ::_wrap_Magick_Image_waveletDenoise,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("whiteThreshold");
  members.insert({
    "whiteThreshold",
      _Magick_Image_templ::InstanceMethod("whiteThreshold",
        &_Magick_Image_templ::_wrap_Magick_Image_whiteThreshold,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("whiteThresholdChannel");
  members.insert({
    "whiteThresholdChannel",
      _Magick_Image_templ::InstanceMethod("whiteThresholdChannel",
        &_Magick_Image_templ::_wrap_Magick_Image_whiteThresholdChannel,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("write");
  members.insert({
    "write",
      _Magick_Image_templ::InstanceMethod("write",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_write,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("writeMask");
  members.insert({
    "writeMask",
      _Magick_Image_templ::InstanceMethod("writeMask",
        &_Magick_Image_templ::_wrap_Image__wrap_Magick_Image_writeMask,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("writePixels");
  members.insert({
    "writePixels",
      _Magick_Image_templ::InstanceMethod("writePixels",
        &_Magick_Image_templ::_wrap_Magick_Image_writePixels,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("zoom");
  members.insert({
    "zoom",
      _Magick_Image_templ::InstanceMethod("zoom",
        &_Magick_Image_templ::_wrap_Magick_Image_zoom,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("image");
  members.insert({
    "image",
      _Magick_Image_templ::InstanceMethod("image",
        &_Magick_Image_templ::_wrap_Magick_Image_image,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("constImage");
  members.insert({
    "constImage",
      _Magick_Image_templ::InstanceMethod("constImage",
        &_Magick_Image_templ::_wrap_Magick_Image_constImage,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("imageInfo");
  members.insert({
    "imageInfo",
      _Magick_Image_templ::InstanceMethod("imageInfo",
        &_Magick_Image_templ::_wrap_Magick_Image_imageInfo,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("constImageInfo");
  members.insert({
    "constImageInfo",
      _Magick_Image_templ::InstanceMethod("constImageInfo",
        &_Magick_Image_templ::_wrap_Magick_Image_constImageInfo,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("options");
  members.insert({
    "options",
      _Magick_Image_templ::InstanceMethod("options",
        &_Magick_Image_templ::_wrap_Magick_Image_options,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("constOptions");
  members.insert({
    "constOptions",
      _Magick_Image_templ::InstanceMethod("constOptions",
        &_Magick_Image_templ::_wrap_Magick_Image_constOptions,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("quantizeInfo");
  members.insert({
    "quantizeInfo",
      _Magick_Image_templ::InstanceMethod("quantizeInfo",
        &_Magick_Image_templ::_wrap_Magick_Image_quantizeInfo,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("constQuantizeInfo");
  members.insert({
    "constQuantizeInfo",
      _Magick_Image_templ::InstanceMethod("constQuantizeInfo",
        &_Magick_Image_templ::_wrap_Magick_Image_constQuantizeInfo,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("modifyImage");
  members.insert({
    "modifyImage",
      _Magick_Image_templ::InstanceMethod("modifyImage",
        &_Magick_Image_templ::_wrap_Magick_Image_modifyImage,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("replaceImage");
  members.insert({
    "replaceImage",
      _Magick_Image_templ::InstanceMethod("replaceImage",
        &_Magick_Image_templ::_wrap_Magick_Image_replaceImage,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  
  /* add static class functions and variables */
  
  
#ifndef NAPI_CPP_EXCEPTIONS
  goto fail;
fail:
  return;
#endif
}

