name: Github packages publish

on:
  workflow_dispatch:
    inputs:
      prerelease:
        type: boolean
        default: false
        description: whether the release should be marked as a prerelease


jobs:
  swig:
    name: Generate the SWIG wrappers
    uses:
      ./.github/workflows/swig.yml


  build-native:
    name: Build the native modules
    needs: swig

    strategy:
      matrix:
        platform:
          - ubuntu-20.04
          - macos-12
          - macos-latest
          - windows-2022

    uses:
      ./.github/workflows/build.yml
    with:
      native: true
      wasm: false
      platform: ${{ matrix.platform }}
      dependencies: conan
      integration: node
      install_cmd: "node -e \"fs.symlinkSync(process.env.GITHUB_WORKSPACE, path.resolve('node_modules', 'magickwand.js'), os.platform() == 'win32' ? 'junction': 'dir')\""
      conan_id: ''
      extra_npm_opts: '--disable-display'
      publish: true


  build-wasm:
    name: Build the WASM module
    needs: swig

    uses:
      ./.github/workflows/build.yml
    with:
      native: false
      wasm: true
      platform: ubuntu-latest
      dependencies: conan
      integration: browser
      install_cmd: "node -e \"fs.symlinkSync(process.env.GITHUB_WORKSPACE, path.resolve('node_modules', 'magickwand.js'), os.platform() == 'win32' ? 'junction': 'dir')\""
      conan_id: ''
      extra_npm_opts: '--disable-display'
      publish: true


  create-release:
    name: Create the Github release
    runs-on: ubuntu-latest
    needs: [ build-native, build-wasm ]
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        draft: true
        prerelease: ${{ inputs.prerelease }}

  pack-prebuilt-binaries:
    name: Pack the prebuilt binaries
    runs-on: ubuntu-latest
    needs: [ create-release ]
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        platform: [linux-x64, win32-x64, darwin-x64, darwin-arm64, emscripten-wasm32]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Download the artifact for ${{ matrix.platform }}
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.platform }}
        path: lib/binding

    - name: Pack
      run:
        tar -zcvf ${{ matrix.platform }}.tar.gz lib/binding

    - name: Publish
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: ${{ matrix.platform }}.tar.gz
        updateOnlyUnreleased: true
        omitDraftDuringUpdate: true
        omitPrereleaseDuringUpdate: true


  create-npm-package:
    name: Create the npm package
    runs-on: ubuntu-latest
    needs: [ create-release ]
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - name: Download the SWIG-generated wrappers
      uses: actions/download-artifact@v4
      with:
        name: swig
        path: swig
    - run: npm pack
    - name: Get version
      id: version
      run: node -p '"version=" + require("./package.json").version' >> "$GITHUB_OUTPUT"
    - name: Upload the npm package
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: magickwand.js-${{ steps.version.outputs.version }}.tgz
        updateOnlyUnreleased: true
        omitDraftDuringUpdate: true
        omitPrereleaseDuringUpdate: true


  publish-release:
    name: Publish the Github release
    runs-on: ubuntu-latest
    needs: [ create-npm-package, pack-prebuilt-binaries ]
    steps:
    - name: Publish the draft release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        omitDraftDuringUpdate: false
        draft: false
        omitPrereleaseDuringUpdate: true


  test_package:
    name: Test the npm package
    uses: mmomtchev/magickwand.js/.github/workflows/test-package.yml@main
    needs: [ publish-release, create-npm-package ]
    with:
      package: magickwand.js-${{ needs.create-npm-package.outputs.version }}.tgz
      download: true
