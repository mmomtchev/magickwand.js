name: Test release

on:
  release:
    types: [published]

  workflow_dispatch:

jobs:
  test_published:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04, ubuntu-22.04, macos-11, macos-12, windows-2019, windows-2022]
        node-version: [18.x, 20.x, 21.x]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install fonts on Ubuntu
        run: sudo apt-get install -y fonts-ubuntu || true
        if: startsWith(matrix.platform, 'ubuntu')
      - name: Install through npm
        run: npm install
      - name: Run the unit tests headless
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npx mocha --require ts-node/register --types mocha --reporter=tap --v8-expose-gc --timeout 5000 test/*.test.ts
        env:
          MOCHA_INTEGRATION: node,browser
          MOCHA_MAGICK_INSTALL: "node -e \"fs.symlinkSync(process.env.GITHUB_WORKSPACE, path.resolve('node_modules', 'magickwand.js'), os.platform() == 'win32' ? 'junction': 'dir')\""


  pack:
    runs-on: ubuntu-latest
    outputs:
      package: ${{ steps.pack.outputs.package }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Pack
        id: pack
        run: |
          npm run deps:download
          npm pack
          echo package=`echo magickwand.js-*.tgz` >> $GITHUB_OUTPUT
      - name: Upload tarball
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.pack.outputs.package }}
          path: ${{ steps.pack.outputs.package }}


  test_package:
    uses: mmomtchev/magickwand.js/.github/workflows/test-package.yml@main
    needs: pack
    with:
      package: ${{ needs.pack.outputs.package }}
      download: true
