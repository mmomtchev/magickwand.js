name: Test npm package

on:
  workflow_call:
    inputs:
      package:
        type: string
        default: magickwand.js@latest
        description: package tarball or npm name to install
      download:
        type: boolean
        default: false
        description: whether the package artifact needs to be downloaded
  workflow_dispatch:
    inputs:
      package:
        type: string
        default: magickwand.js@latest
        description: package tarball or npm name to install


jobs:
  test_npm_binaries:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-20.04
          - ubuntu-22.04
          - windows-2019
          - windows-2022
          - macos-11
          - macos-12
        node-version: [18.x, 20.x, 21.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Create package.json
        run: npm init --yes
      - name: Install fonts on Ubuntu
        run: sudo apt-get install -y fonts-ubuntu || true
        if: startsWith(matrix.platform, 'ubuntu')
      - name: Install dependencies
        run: |
          npm i chai chai-spies chai-as-promised mocha typescript ts-node tsconfig-paths \
            @types/chai @types/chai-as-promised @types/mocha @types/node \
            karma karma-chrome-launcher karma-mocha webpack webpack-cli ts-loader
        shell: bash
      - name: Download the package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.package }}
        if: inputs.download
      - name: Install magickwand.js from ${{ inputs.package }}
        run: |
          npm install ${{ inputs.package }}
          mkdir -p deps/ImageMagick/config
          cp node_modules/magickwand.js/deps/ImageMagick/config/policy-websafe.xml deps/ImageMagick/config
        shell: bash
      - name: Set up the unit tests
        run: mv node_modules/magickwand.js/test .
      - name: Run the unit tests headless
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npx mocha --require ts-node/register --types mocha --reporter=tap --v8-expose-gc --timeout 5000 test/*.test.ts
        env:
          TS_NODE_PROJECT: ${{ github.workspace }}/test/tsconfig.standalone.json
          MOCHA_INTEGRATION: node,browser
          MOCHA_MAGICK_INSTALL: npm install --force ${{ inputs.download && format('{0}/{1}', github.workspace, inputs.package) || inputs.package }}


  test_npm_rebuild:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-20.04
          - ubuntu-22.04
          - windows-2022
          - macos-11
          - macos-12
        node-version: [18.x, 20.x, 21.x]

    steps:
      - name: Enable long paths on Windows
        run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Create package.json
        run: npm init --yes
      - name: Install fonts on Ubuntu
        run: sudo apt-get install -y fonts-ubuntu || true
        if: startsWith(matrix.platform, 'ubuntu')
      - name: Install dependencies
        run: |
          npm i chai chai-spies chai-as-promised mocha typescript ts-node tsconfig-paths \
            @types/chai @types/chai-as-promised @types/mocha @types/node \
            karma karma-chrome-launcher karma-mocha webpack webpack-cli ts-loader
        shell: bash
      - name: Download the package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.package }}
        if: inputs.download
      - name: Install magickwand.js from ${{ inputs.package }}
        run: |
          [[ '${{ matrix.platform }}' =~ 'windows' ]] && subst M: `pwd` && cd M:/
          npm install --verbose --foreground-scripts \
            ${{ inputs.package }} --build-from-source
          mkdir -p deps/ImageMagick/config
          cp node_modules/magickwand.js/deps/ImageMagick/config/policy-websafe.xml deps/ImageMagick/config
        shell: bash
      - name: Set up the unit tests
        run: mv node_modules/magickwand.js/test .
      - name: Run the unit tests headless
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npx mocha --require ts-node/register --types mocha --reporter=tap --v8-expose-gc --timeout 5000 test/*.test.ts
        env:
          TS_NODE_PROJECT: ${{ github.workspace }}/test/tsconfig.standalone.json
          MOCHA_INTEGRATION: node,browser
          MOCHA_MAGICK_INSTALL: npm install --force ${{ inputs.download && format('{0}/{1}', github.workspace, inputs.package) || inputs.package }}


  test_npm_rebuild_light:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-22.04
        node-version: [18.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Create package.json
        run: npm init --yes
      - name: Install fonts on Ubuntu
        run: sudo apt-get install -y fonts-ubuntu || true
        if: startsWith(matrix.platform, 'ubuntu')
      - name: Download the package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.package }}
        if: inputs.download
      - name: Install magickwand.js from ${{ inputs.package }}
        run: |
          [[ '${{ matrix.platform }}' =~ 'windows' ]] && subst M: `pwd` && cd M:/
          npm install --verbose --foreground-scripts                                \
            ${{ inputs.package }}                        \
            --build-from-source                                                     \
            --fonts=false --jpeg=true --png=false --tiff=false                      \
            --webp=false --jpeg2000=false --raw=false --openmedia=false             \
            --brotli=false --h265=false --exr=false --fftw=false --heif=false       \
            --jbig=true --color=false --xml=false --gzip=false --zip=false          \
            --bzip2=true --zstd=false --xz=false --lzma=false --simd=false          \
            --openmp=true --display=false
        shell: bash
      - name: Test loading the package
        run: node -p 'require("magickwand.js").MagickCore.GetMagickDelegates()'


  test_npm_rebuild_shared:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04]
        node-version: [18.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/checkout@v4
        with:
          repository: 'imagemagick/ImageMagick'
          path: 'ImageMagick'
          ref: ${{ github.event.inputs.im_version }}
      - name: Build and install ImageMagick-7
        run: |
          cd ImageMagick
          sh configure --prefix /usr
          make -j4
          sudo make install
      - name: Create package.json
        run: npm init --yes
      - name: Install fonts on Ubuntu
        run: sudo apt-get install -y fonts-ubuntu || true
        if: startsWith(matrix.platform, 'ubuntu')
      - name: Install dependencies
        run: |
          npm i chai chai-spies chai-as-promised mocha typescript ts-node tsconfig-paths \
            @types/chai @types/chai-as-promised @types/mocha @types/node \
            karma karma-chrome-launcher karma-mocha webpack webpack-cli ts-loader
        shell: bash
      - name: Download the package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.package }}
        if: inputs.download
      - name: Install magickwand.js from ${{ inputs.package }}
        run: |
          [[ '${{ matrix.platform }}' =~ 'windows' ]] && subst M: `pwd` && cd M:/
          npm install --verbose --foreground-scripts=true      \
            ${{ inputs.package }}                              \
            --build-from-source --shared_imagemagick           \
            --magicklibs="-lMagick++-7.Q16HDRI -lMagickWand-7.Q16HDRI -lMagickCore-7.Q16HDRI"
          mkdir -p deps/ImageMagick/config
          cp node_modules/magickwand.js/deps/ImageMagick/config/policy-websafe.xml deps/ImageMagick/config
        env:
          CFLAGS: -I/usr/include/ImageMagick-7
          CXXFLAGS: -I/usr/include/ImageMagick-7 
        shell: bash
      - name: Set up the unit tests
        run: mv node_modules/magickwand.js/test .
      - name: Run the unit tests headless
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npx mocha --require ts-node/register --types mocha --reporter=tap --v8-expose-gc --timeout 5000 test/*.test.ts
        env:
          TS_NODE_PROJECT: ${{ github.workspace }}/test/tsconfig.standalone.json
          MOCHA_INTEGRATION: node,browser
          MOCHA_MAGICK_INSTALL: npm install --force ${{ inputs.download && format('{0}/{1}', github.workspace, inputs.package) || inputs.package }}
