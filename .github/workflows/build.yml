name: Build & test magickwand.js

on:
  workflow_call:
    inputs:
      platform:
        type: string
        required: true
      dependencies:
        type: string
        default: 'conan'
        description: dependencies origin ('conan' or 'system')
      native:
        type: boolean
        required: true
        description: build the native module
      wasm:
        type: boolean
        required: true
        description: build the WASM module
      integration:
        type: string
        required: true
        description: integration tests to run ('node' and/or 'browser')
      light:
        type: boolean
        default: false
        description: do not expect that all delegates are included
      extralight:
        type: boolean
        default: false
        description: do not expect the PNG delegate
      install_cmd:
        type: string
        description: install command to use for the integration tests
      extra_npm_opts:
        type: string
        default: ''
        description: extra npm options
      container:
        type: string
        default: null
        description: run in container
      container_init:
        type: string
        default: null
        description: container initialization

jobs:
  build:
    name: Build & test ${{ inputs.wasm && 'WASM' || '' }} ${{ inputs.native && 'native' || '' }} ${{ inputs.platform }}/${{ inputs.dependencies }}
    runs-on: ${{ inputs.platform }}
    container: ${{ inputs.container }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        name: Checkout ImageMagick
        with:
          repository: mmomtchev/ImageMagick
          path: ${{ github.workspace }}/deps/ImageMagick
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Setup emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: 3.1.53
        if: inputs.wasm
      - name: Setup container
        run: ${{ inputs.container_init }}
        if: inputs.container_init
      - name: Download the SWIG-generated wrappers
        uses: actions/download-artifact@v4
        with:
          name: swig
          path: swig
      - name: Install the xpacks
        run: |
          npm install xpm
          npx xpm install
      - name: Get conan home
        shell: bash
        id: conan_home
        run: |
          npx xpm run -q conan -- version
          echo path=`npx xpm run -q conan -- config home` >> $GITHUB_OUTPUT
      - name: Cache conan artifacts
        id: conan-artifacts
        uses: actions/cache@v4
        with:
          path: ${{ steps.conan_home.outputs.path }}
          key: conan-${{ inputs.platform }}
      - name: Install fonts on Ubuntu
        run: sudo apt-get install -y fonts-ubuntu || true
        if: startsWith(inputs.platform, 'ubuntu')
      - name: Install libpng-dev and libjpeg-dev on Ubuntu 24.04
        run: sudo apt-get install -y libpng-dev libjpeg-dev
        if: inputs.platform == 'ubuntu-24.04' && inputs.dependencies == 'system'
      - name: Do not use GHA pkg-config on Windows
        shell: bash
        run: rm `which pkg-config`*
        if: runner.os == 'Windows'

      - name: Build magickwand.js
        shell: bash
        run: |
          npm install --verbose --foreground-scripts \
            ${{ inputs.native && '--build-from-source' || '--skip-magickwand-native' }}    \
            ${{ inputs.wasm   && '--build-wasm-from-source' || '--skip-magickwand-wasm' }} \
            ${{ inputs.dependencies == 'conan' && '--enable-conan' || '--disable-conan' }} \
            ${{ inputs.extra_npm_opts }}
        # Because of https://github.com/mmomtchev/hadron/issues/37
        env:
          C_INCLUDE_PATH: /usr/local/include
          CPLUS_INCLUDE_PATH: /usr/local/include

      - name: Check size
        run: |
          echo "::notice::WASM version is $(( `gzip -9c lib/binding/emscripten-wasm32/magickwand.wasm | wc -c` / 1024 )) KBytes gzipped"
          echo "::notice::WASM version is $(( `brotli -9c lib/binding/emscripten-wasm32/magickwand.wasm | wc -c` / 1024 )) KBytes brotlied"
        if: inputs.wasm
      - name: Locate addon file
        shell: bash
        id: addon
        run: node -p '"addon=" + path.resolve(__dirname, "lib", "binding", `${os.platform()}-${os.arch()}`, "magickwand.node")' >> $GITHUB_OUTPUT
        if: inputs.native
      - name: List linked libraries (Linux)
        run: ldd ${{ steps.addon.outputs.addon }}
        if: runner.os == 'Linux' && inputs.native
      - name: List linked libraries (macOS)
        run: otool -L ${{ steps.addon.outputs.addon }}
        if: runner.os == 'macOS' && inputs.native

      - run: npx mocha ${{ inputs.native && 'test/node.test.ts' || '' }} test/integration.test.ts
        if: runner.os != 'Linux' || !contains(inputs.integration, 'browser')
        env:
          MOCHA_INTEGRATION: ${{ inputs.integration }}
          MOCHA_MAGICK_INSTALL: ${{ inputs.install_cmd }}
          MOCHA_LIGHT: ${{ inputs.light }}
          MOCHA_EXTRALIGHT: ${{ inputs.extralight }}
      - run: xvfb-run npx mocha ${{ inputs.native && 'test/node.test.ts' || '' }} test/integration.test.ts
        if: runner.os == 'Linux' && contains(inputs.integration, 'browser')
        env:
          MOCHA_INTEGRATION: ${{ inputs.integration }}
          MOCHA_MAGICK_INSTALL: ${{ inputs.install_cmd }}
          MOCHA_LIGHT: ${{ inputs.light }}
          MOCHA_EXTRALIGHT: ${{ inputs.extralight }}
